export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1

# Those list pressed Keycodes
alias keycodes="xxd -psd"
alias keycodes2="sed -n l"
alias keycodes3="infocmp -cL"

# Global abbriviations / links
alias -g docs=~/Documents
alias -g shots=~/Pictures/Screenshots
alias -g projects=~/Projects
alias -g sd=/Volumes/Untitled

# Kills Adobe Creative Cloud processes
alias adobe="pkill -9 -fi \'core sync\'; pkill -9 -fi \'creative cloud\'; pkill -9 -fi \'adobe desktop service\'; pkill -9 -fi \'adobeipcbroker\'; pkill -9 -fi \'logtransport\'"

# File exstensions handling
alias -s lua="$EDIT"
alias -s txt="$EDIT"
alias -s conf="$EDIT"
alias -s cfg="$EDIT"
alias -s ini="$EDIT"
alias -s jpg="ascii-image-converter -C"
alias -s jpeg="ascii-image-converter -C"
alias -s png="ascii-image-converter -C"
alias -s tiff="ascii-image-converter -C"

# insert last command result
zmodload -i zsh/parameter
insert-last-command-output() {
  LBUFFER+="$(eval $history[$((HISTCMD-1))])"
}
zle -N insert-last-command-output
# Ctrl+V Insert last output
bindkey -r '\Cv'
bindkey '\Cv' insert-last-command-output


# FZF List and kill processes
fzf-kill() {
ps -aevrc | fzf --layout=reverse-list --bind "alt-w:reload(ps -aevr)" | xargs kill -9 &> /dev/null
}
zle -N fzf-kill
bindkey '\ek' fzf-kill


# Escape = reset prompt line
# Double Escape = quit
double_escape() {
zle kill-whole-line
exit
}
zle -N double_escape
bindkey '\E' kill-whole-line
bindkey '\E\E' double_escape


# List open ports
listening() {
    if [ $# -eq 0 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P
    elif [ $# -eq 1 ]; then
        sudo lsof -iTCP -sTCP:LISTEN -n -P | grep -i --color $1
    else
        echo "Usage: listening [pattern]"
    fi
}


# Opens (Chromium based) browser's history in FZF. Option + C / copies link through pbcopy.
vivaldi-history() {
  local cols sep
  cols=$(( COLUMNS / 3 ))
  sep='{::}'
  #  Change word "Vivaldi" to "Chrome/Google Chrome" or "Chromium" or "Brave" or etc.
  cp -f ~/Library/Application\ Support/Vivaldi/Default/History /tmp/h

  sqlite3 -separator $sep /tmp/h \
    "select substr(title, 1, $cols), url
     from urls order by last_visit_time desc" |
  awk -F $sep '{printf "%-'$cols's  \x1b[36m%s\x1b[m\n", $1, $2}' |
  fzf --ansi --multi --bind 'alt-c:execute-silent(echo {} | sed "s/.* //" | pbcopy)' | sed 's#.*\(https*://\)#\1#' | xargs open
}
# binds browser history to Option + G
zle     -N   vivaldi-history
bindkey '\eg' vivaldi-history


# Open path in new iTerm shell window. Also works as "open", but opens passed terminal command in new window.
function window() {
  # Must not have trailing semicolon, for iTerm compatibility
  local command="cd \\\"$PWD\\\"; clear"
  (( $# > 0 )) && command="${command}; $*"

    osascript \
        -e 'tell application "iTerm2" to tell current window to set newWindow to (create window with default profile)'\
        -e "tell application \"iTerm2\" to tell current session of newWindow to write text \"${command} ;exit\"" \
        -e "delay 1" \
        -e "tell application \"iTerm2\" to activate" \
}


# Alt+Shift+S to prepend "sudo " to line
function _insert_sudo {
prefix="sudo"
BUFFER="$prefix $BUFFER"
CURSOR=$(($CURSOR + $#prefix + 1))
}
zle -N insert-sudo _insert_sudo
bindkey "\eS" insert-sudo


# Insert last executed command output
zmodload -i zsh/parameter
insert-last-command-output() {
  LBUFFER+="$(eval $history[$((HISTCMD-1))])"
}
zle -N insert-last-command-output
# Ctrl+V to Insert last output
bindkey -r '\Cv'
bindkey '\Cv' insert-last-command-output


# Copy / Cut / Paste shell selection using pbcopy/pbpaste. Option + C (V) (X)
pb-copy-region () {
  zle copy-region-as-kill
  print -rn $CUTBUFFER | pbcopy
  ((REGION_ACTIVE = 0))
}

pb-cut-region () {
  zle copy-region-as-kill
  print -rn $CUTBUFFER | pbcopy
  zle kill-region
}

pb-yank () {
  CUTBUFFER=$(pbpaste)
  zle yank
}

zle -N pb-copy-region
bindkey -e '\ec' pb-copy-region

zle -N pb-cut-region
bindkey -e '\ex' pb-cut-region

zle -N pb-yank
bindkey '\ev' pb-yank


# Outputs internal and external IP addresses
ipp() {
  printf "Public IP: " >&2
  curl ipinfo.io/ip
}
ipl() {
  printf "Local IP: " >&2
  ifconfig | grep "inet " | grep -v 127.0.0.1 | head -n1 | cut -d' ' -f2
}
alias ip="ipl; ipp"
