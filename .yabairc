#!/bin/zsh

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa
# yabai -m config debug_output on

yabai -m config 				 				\
	layout                       bsp			\
	top_padding                  8				\
	bottom_padding               8				\
	left_padding                 8				\
	right_padding                8				\
	window_gap                   8				\
	window_origin_display		 default		\
	window_animation_duration    0.0 			\
	window_animation_frame_rate  60				\
	window_origin_display        default		\
	window_placement             second_child	\
	window_topmost               off			\
	split_ratio                  0.5			\
	split_type                   auto 			\
	auto_balance                 off			\
	focus_follows_mouse          off			\
	mouse_follows_focus          off			\
	window_opacity               on				\
	active_window_opacity        1.0 			\
	normal_window_opacity        0.95 			\
	window_opacity_duration      0.2 			\
	mouse_drop_action            swap 			\
	window_border                off			\
	window_border_hidpi          off			\
	window_border_width          1 				\
	window_border_radius         11 			\
	window_border_blur           off			\
	active_window_border_color   0xffc66500 	\
	normal_window_border_color   0x003a91ce 	\
	insert_feedback_color        0xffbd6000 	\
	window_shadow                off			\
	window_zoom_persist          on				\
	mouse_modifier               fn				\
	mouse_action2                move			\
	mouse_action1                resize			


# Sketchybar
############
# yabai -m config external_bar                 all:34:0
# yabai -m signal --add event=window_focused action="sketchybar --trigger window_focus"
# yabai -m signal --add event=window_created action="sketchybar --trigger windows_on_spaces"
# yabai -m signal --add event=window_destroyed action="sketchybar --trigger windows_on_spaces"
# yabai -m signal --add event=window_title_changed action="sketchybar -m --trigger title_change &> /dev/null"

# Balance by windows counter
############################
# yabai -m signal --add event=window_created action='~/CLI/yabai-count-two-windows'
# yabai -m signal --add event=window_destroyed action='~/CLI/yabai-count-two-windows'

# Autobalance toggle
####################
# if [ $(yabai -m config auto_balance) = "on" ]; then; yabai -m config auto_balance off; else; yabai -m config auto_balance on; fi

# Floating windows
##################
yabai -m signal --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".\"can-resize\" or .\"is-floating\"" || yabai -m window $YABAI_WINDOW_ID --toggle float'

# Back from Zoom Fullscreen
###########################
yabai -m signal --add event=window_focused action='if [[ $(yabai -m query --windows --window | jq ".\"is-floating\"") == "false" ]]; then
win_id=$(yabai -m query --windows --space | jq "map(select(.\"has-fullscreen-zoom\" and (.\"has-focus\" | not)))[0].id")
if [[ $win_id != "null" ]]; then yabai -m window $win_id --toggle zoom-fullscreen; fi
fi'

#File Manager on 
#################
# yabai -m signal --add title="File Manager" event=window_created action="yabai -m window --swap first; yabai -m window --ratio abs:0.25"

# yabai -m signal --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er ".resizable == 0 and .floating == 0" && yabai -m window $YABAI_WINDOW_ID --toggle float layer=above'

# yabai -m signal --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq '.[] | select(.title == "File Manager")' && yabai -m window $YABAI_WINDOW_ID action="yabai -m window --warp last"

# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus recent || yabai -m window --focus first"

# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus recent || yabai -m window --focus first"

# # focus window after active space changes
# yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"
# # focus window after active display changes
# yabai -m signal --add event=display_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"


yabai -m rule --add app="System\ Settings" manage=off
yabai -m rule --add app="The\ Unarchiver" manage=off layer=above
yabai -m rule --add app="DaVinci\ Resolve" manage=off opacity=1.0
yabai -m rule --add app="Adobe\ Premiere\ Pro\ 2022" manage=off opacity=1.0
yabai -m rule --add app="Adobe\ Bridge\ 2022" manage=off opacity=1.0
yabai -m rule --add app="Adobe\ Premiere\ Pro\ 2022" manage=off opacity=1.0
yabai -m rule --add app="Adobe\ Photoshop\ 2022" manage=off opacity=1.0
yabai -m rule --add app="Adobe\ After\ Effects\ 2022" manage=off opacity=1.0
yabai -m rule --add app="Keyboard\ Maestro" manage=off
yabai -m rule --add app="Logic\ Pro" manage=off
yabai -m rule --add app="iStat\ Menus" manage=off opacity=1.0
yabai -m rule --add app="Shortcuts" manage=off
yabai -m rule --add app="Creative\ Cloud" manage=off
yabai -m rule --add app="Hue\ Sync" manage=off
yabai -m rule --add app="BetterTouchTool" manage=off
yabai -m rule --add title='Parallels\ Desktop' manage=off opacity=1.0
yabai -m rule --add title='LuLu\ Alert' manage=off
yabai -m rule --add title='Alert$' manage=off
yabai -m rule --add title='$Alert' manage=off
yabai -m rule --add title='$Info' manage=off
yabai -m rule --add title='iStat Menus Status' manage=off opacity=1.0
yabai -m rule --add app="(Copy|Bin|About This Mac|Info)" manage=off layer=above
yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off layer=above
yabai -m rule --add app="^Vivaldi" title="(Picture in Picture)" manage=off opacity=1.0
yabai -m rule --add app="^Finder$" opacity=1.0

echo "yabai configuration loaded.."
